---
- name: lesscpy must be in apache PATH
  pip: name=lesscpy version=0.9j
  register: result
  until: result|succeeded
  retries: 5

- name: enable apache modules
  apache2_module: state=present name="{{ item }}"
  with_items:
    - alias
    - headers
  notify:
    - reload apache
  when: os == 'ubuntu'

- name: remove custom headers config
  file: path=/etc/apache2/mods-enabled/headers.conf
        state=absent
  when: os == 'ubuntu'
  notify:
    - reload apache

- name: create horizon config directory
  file: dest=/etc/openstack-dashboard state=directory

- name: create horizon config directory
  file: dest=/etc/openstack-dashboard state=directory

- name: openstack dashboard config (12.04)
  template: src=etc/apache2/sites-available/openstack_dashboard.conf
            dest=/etc/apache2/sites-available/openstack_dashboard
  when:
    - os == 'ubuntu'
    - ansible_distribution_version == "12.04"
  notify:
    - reload apache

- name: openstack dashboard config
  template: src=etc/apache2/sites-available/openstack_dashboard.conf
            dest=/etc/apache2/sites-available/openstack_dashboard.conf
  when:
    - os == 'ubuntu'
    - ansible_distribution_version != "12.04"
  notify:
    - reload apache

- name: openstack dashboard config
  template: src=etc/apache2/sites-available/openstack_dashboard.conf
            dest=/etc/apache2/sites-available/openstack_dashboard.conf
  when:
    - os == 'ubuntu'
    - ansible_distribution_version != "12.04"
  notify:
    - reload apache

- name: openstack dashboard config (rhel osp)
  template: src=etc/httpd/conf.d/openstack-dashboard.conf
            dest=/etc/httpd/conf.d/openstack-dashboard.conf
  when:
    - os == 'rhel'
    - openstack_install_method == "distro"
  notify:
    - reload apache

- name: enable horizon apache site
  apache2_site: name=openstack_dashboard state=present
  when: os == 'ubuntu'
  notify:
    - reload apache

- name: set horizon keystone policy fact
  set_fact: policy_for_horizon=True
  when: horizon.customize|default('False')|bool

# Use custom policy to allow cloud_admin admin panel access
- name: configure custom keystone policy
  template:
    src: "roles/keystone/templates/etc/keystone/policy.json"
    dest: "/etc/openstack-dashboard/keystone_policy.json"
    mode: 0640
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
  when: horizon.customize|default('False')|bool
  notify:
    - reload apache

- name: horizon local settings
  template:
    src: "etc/openstack-dashboard/__init__.py"
    dest: "/etc/openstack-dashboard/__init__.py"
    mode: 0644
    owner: "root"
    group: "root"
  notify:
    - reload apache

- name: horizon local settings
  template:
    src: "etc/openstack-dashboard/local_settings.py"
    dest: "/etc/openstack-dashboard/local_settings.py"
    mode: 0644
    owner: "root"
    group: "{{ apache_group }}"
  notify:
    - reload apache

#Use current Symlink for both package/source install
- name: create static assets directory (ubuntu)
  file: dest="{{ horizon.horizon_lib_dir }}/lib/python2.7/site-packages/openstack_dashboard/{{ item }}"
        owner="{{ apache_user }}" group="{{ apache_group }}" state=directory
  with_items:
    - static
    - static/dashboard
    - static/img
    - static/dashboard/fonts
  when: os == 'ubuntu'

## FIXME
## We need to figure out the proper way to get horizon to use /etc/ when
## using a venv
- name: add local_settings to venv
  file: src=/etc/openstack-dashboard/local_settings.py
        dest=/opt/openstack/current/horizon/lib/python2.7/site-packages/openstack_dashboard/local/local_settings.py
        owner=root
        group="{{ apache_user }}"
        mode=0644
        state=link
  when: os == 'ubuntu'

- name: link local settings to /etc/openstack-dashboard
  file: src=/etc/openstack-dashboard/local_settings.py
        dest=/usr/share/openstack-dashboard/openstack_dashboard/local/local_settings.py
        owner=root
        group="{{ apache_user }}"
        mode=0644
        state=link
  when:
    - os == 'rhel'
    - openstack_install_method == 'distro'

- name: custom horizon logo
  get_url: url={{ item.url }}
           dest={{ horizon.horizon_lib_dir }}/lib/python2.7/site-packages/openstack_dashboard/static/dashboard/{{ item.name }}
           force=True
  with_items:
    - { name: img/logo.png, url: "{{ horizon.logo_url|default('') }}"  }
    - { name: img/logo-splash.png, url: "{{ horizon.logo_url|default('') }}" }
    - { name: img/favicon.ico, url: "{{ horizon.favicon_url|default('') }}" }
  when:
    - horizon.logo_url is defined
    - horizon.favicon_url is defined
    - openstack_install_method != 'distro'

- name: custom horizon logo (rhel osp)
  get_url: url={{ item.url }}
           dest=/usr/share/openstack-dashboard/openstack_dashboard/static/dashboard/{{ item.name }}
           force=True
  with_items:
    - { name: img/logo.png, url: "{{ horizon.logo_url|default('') }}"  }
    - { name: img/logo-splash.png, url: "{{ horizon.logo_url|default('') }}" }
    - { name: img/favicon.ico, url: "{{ horizon.favicon_url|default('') }}" }
  when:
    - horizon.logo_url is defined
    - horizon.favicon_url is defined
    - openstack_install_method == 'distro'

- name: Install horizon-customization module (rhel osp)
  pip:
    name: "bb-horizon-customization"
    extra_args: "-i {{ openstack.pypi_mirror }}"
  register: result
  until: result|succeeded
  retries: 5
  when:
    - horizon.customize|default('False')|bool
    - openstack_install_method == 'distro'
  
- name: rcue settings file exists (rhel osp)
  stat:
    path: /etc/openstack-dashboard/local_settings.d/_11_rcue_theme.py
  register: rcue
  when:
    - horizon.customize|default('False')|bool
    - openstack_install_method == 'distro'
  
- name: Disable OSP custom dashboard (rhel osp)
  command: mv /etc/openstack-dashboard/local_settings.d/_11_rcue_theme.py /etc/openstack-dashboard/local_settings.d/_11_rcue_theme.disabled
  when:
    - horizon.customize|default('False')|bool
    - os == 'rhel'
    - openstack_install_method == 'distro'
    - rcue.stat.exists == True
  notify: reload apache

- name: rcue disabled file exists (rhel osp)
  stat:
    path: /etc/openstack-dashboard/local_settings.d/_11_rcue_theme.disabled
  register: rcued
  when:
    - not horizon.customize|default('False')|bool
    - openstack_install_method == 'distro'
    - os == 'rhel'
  
- name: Enable OSP custom dashboard (rhel osp)
  command: mv /etc/openstack-dashboard/local_settings.d/_11_rcue_theme.disabled /etc/openstack-dashboard/local_settings.d/_11_rcue_theme.py 
  when:
    - not horizon.customize|default('False')|bool
    - openstack_install_method == 'distro'
    - os == 'rhel'
    - rcued.stat.exists == True
  notify: reload apache

- name: Enable/Disable lbaas dashboard (ubuntu)
  file:
    src: "{{ horizon.horizon_lib_dir }}/lib/python2.7/site-packages/neutron_lbaas_dashboard/enabled/_1481_project_ng_loadbalancersv2_panel.py"
    path: "{{ horizon.horizon_lib_dir }}/lib/python2.7/site-packages/openstack_dashboard/local/enabled/_1481_project_ng_loadbalancersv2_panel.py"
    state: "{{ (neutron.lbaas.enabled | bool) | ternary('link', 'absent') }}"
  notify: reload apache
  when: os == 'ubuntu'

- name: Enable/Disable lbaas dashboard (ubuntu)
  file:
    src: "{{ horizon.horizon_lib_dir }}/lib/python2.7/site-packages/neutron_lbaas_dashboard/enabled/_1481_project_ng_loadbalancersv2_panel.py"
    path: "{{ horizon.horizon_lib_dir }}/lib/python2.7/site-packages/openstack_dashboard/local/enabled/_1481_project_ng_loadbalancersv2_panel.py"
    state: "{{ (neutron.lbaas.enabled | bool) | ternary('link', 'absent') }}"
  notify: reload apache
  when: os == 'ubuntu'

- name: gather static assets from openstack install (ubuntu)
  environment:
    DJANGO_SETTINGS_MODULE: 'openstack_dashboard.settings'
    PYTHONPATH: "$PYTHONPATH"
  shell: "{{ item }}"
  with_items:
    - "{{ horizon.horizon_lib_dir }}/bin/django-admin.py collectstatic --noinput"
    - "{{ horizon.horizon_lib_dir }}/bin/django-admin.py compress --force"
  when: os == 'ubuntu'


- name: trigger restart on upgrades
  debug:
    msg: "Triggering service restart for upgrade"
  changed_when: True
  notify: restart apache
  when:
    - code_has_changed | default('False') | bool
    - upgrade | default('False') | bool

- meta: flush_handlers

- name: ensure apache started
  service: name="{{ apache.service_name[os] }}" state=started
  when: os == 'ubuntu'

- name: Permit HTTP and HTTPS
  ufw: rule=allow to_port={{ item }} proto=tcp
  tags: ufw
  with_items:
  - 80
  - 443
  when: os == 'ubuntu'

- name: Permit access to horizon
  firewalld:
    state: enabled
    permanent: true
    port: "{{ item }}/tcp"
  with_items:
    - 80
    - 443
  tags: firewall
  when: os == 'rhel'

- meta: flush_handlers

- name: ensure apache is enabled
  service: name="{{ apache.service_name[os] }}" state=started enabled=true

- include: monitoring.yml
  tags:
    - monitoring
    - common
  when: monitoring.enabled|default('True')|bool

- include: logging.yml
  tags:
    - logrotate
    - logging
  when: logging.enabled|default('True')|bool

- include: serverspec.yml
  tags:
    - serverspec
  when: serverspec.enabled|default('False')|bool
